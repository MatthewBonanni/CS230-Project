import numpy as np
import vtk
from vtk.util.numpy_support import vtk_to_numpy
import os
import pickle

def main():
    # CFD results directory
    cfd_results = 'DeepLearningProject'
    n_cases = 67

    # Dictionary to hold processed data
    data = {}
    # Loop over directories
    for directory in os.listdir(cfd_results):
        # Name of case
        case = directory.split('_')[-1]
        data[case] = ([], [])

        # Loop over possible cases
        for i in range(n_cases):
            # Data file
            file_name = f'{cfd_results}/{directory}/flow_{i}.vtu'
            # Check if it exists
            if os.path.exists(file_name):
                # If it does, process it
                x, pressure = process_data(file_name)
                data[case][0].append(x)
                data[case][1].append(pressure)
            # If it doesn't exist, append None
            else:
                data[case][0].append(None)
                data[case][1].append(None)

    # Write to file
    with open('data.pkl', 'wb') as outfile:
        pickle.dump(data, outfile, protocol=pickle.HIGHEST_PROTOCOL)

def process_data(file_name):
    '''
    Read pressure data in from a VTU file generated by SU2.
    '''
    # Read the VTU file
    reader = vtk.vtkXMLUnstructuredGridReader()
    reader.SetFileName(file_name)
    reader.Update()
    output = reader.GetOutput()

    # Extract pressure and location into Numpy arrays
    pressure = vtk_to_numpy(output.GetPointData().GetArray("Pressure"))
    x = vtk_to_numpy(output.GetPoints().GetData())
    # Remove the z-axis since it's 2D
    x = x[:, :2]
    return x, pressure

if __name__ == '__main__':
    main()
